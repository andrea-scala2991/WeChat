/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat.modelli;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.StringReader;
import java.net.Socket;
import java.net.UnknownHostException;
import java.sql.Blob;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

/**
 *
 * @author Andrea
 */
public class ElencoChat extends JFrame{
    Socket sock;
    int codutente;
    NuovaChat nuovachat;
    String username;
    /**
     * Creates new form elenco_chat
     * @param sock
     */
    public ElencoChat(Socket sock) {
        initComponents();
        this.sock=sock;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pan_chat_corrente = new javax.swing.JPanel();
        profilo = new javax.swing.JPanel();
        immprofilo = new javax.swing.JLabel();
        nome = new javax.swing.JLabel();
        bio = new javax.swing.JLabel();
        immnuovachat = new javax.swing.JLabel();
        elenco_chat = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WeChat");
        setBackground(new java.awt.Color(0, 153, 153));
        setBounds(new java.awt.Rectangle(10, 10, 10, 10));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pan_chat_corrente.setBackground(new java.awt.Color(0, 153, 153));
        pan_chat_corrente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pan_chat_correnteLayout = new javax.swing.GroupLayout(pan_chat_corrente);
        pan_chat_corrente.setLayout(pan_chat_correnteLayout);
        pan_chat_correnteLayout.setHorizontalGroup(
            pan_chat_correnteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        pan_chat_correnteLayout.setVerticalGroup(
            pan_chat_correnteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        profilo.setBackground(new java.awt.Color(0, 153, 153));

        immprofilo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        immprofilo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chat/immagini/default-user.png"))); // NOI18N
        immprofilo.setLabelFor(profilo);

        nome.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N

        bio.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N

        immnuovachat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chat/immagini/immaginechatpiccola.jpg"))); // NOI18N
        immnuovachat.setToolTipText("crea una nuova chat");
        immnuovachat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        immnuovachat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                immnuovachatMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout profiloLayout = new javax.swing.GroupLayout(profilo);
        profilo.setLayout(profiloLayout);
        profiloLayout.setHorizontalGroup(
            profiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profiloLayout.createSequentialGroup()
                .addComponent(immprofilo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bio, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addGroup(profiloLayout.createSequentialGroup()
                        .addComponent(nome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(immnuovachat))))
        );
        profiloLayout.setVerticalGroup(
            profiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profiloLayout.createSequentialGroup()
                .addComponent(immprofilo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(profiloLayout.createSequentialGroup()
                .addGroup(profiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(immnuovachat, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(nome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        elenco_chat.setBackground(new java.awt.Color(0, 153, 153));
        elenco_chat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 153, 153), null, null));

        javax.swing.GroupLayout elenco_chatLayout = new javax.swing.GroupLayout(elenco_chat);
        elenco_chat.setLayout(elenco_chatLayout);
        elenco_chatLayout.setHorizontalGroup(
            elenco_chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );
        elenco_chatLayout.setVerticalGroup(
            elenco_chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(profilo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elenco_chat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pan_chat_corrente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pan_chat_corrente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(profilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elenco_chat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void elencaChat(){
        try {
            BufferedReader input;
            PrintWriter output;
            Element root,tipo,nomeutente;
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db=dbf.newDocumentBuilder();
            Document d;
            TransformerFactory transformerFactory;
            Transformer transformer;
            DOMSource source;
            StreamResult result;
            NodeList nl;
            InfoChat ic = null;
            Blob b = null;
            int codchat;
            String s,s2;
            
            input=new BufferedReader(new InputStreamReader(sock.getInputStream()));
            output=new PrintWriter(sock.getOutputStream(),true);
            
            d=db.newDocument();
            root = d.createElement("richiesta");
            d.appendChild(root);
            
            tipo=d.createElement("tipo");
            tipo.appendChild(d.createTextNode("elencochat"));
            root.appendChild(tipo);
            
            nomeutente=d.createElement("username");
            nomeutente.appendChild(d.createTextNode(username));
            root.appendChild(nomeutente);
            
            //manda il file xml al server
            transformerFactory =  TransformerFactory.newInstance();
            transformer = transformerFactory.newTransformer();
            source = new DOMSource(d);
            result =  new StreamResult(output);
            transformer.transform(source,result);
            output.println();
            output.flush();
            //riceve un documento xml dal server con le informazioni 
            //riguardanti le chat di un certo utente e le salva in "nl"
            d=db.parse(new InputSource(new StringReader(input.readLine())));
            nl=d.getElementsByTagName("chat");
            //recupera codice utente
            d = db.newDocument();
            root = d.createElement("richiesta");
            d.appendChild(root);
            tipo=d.createElement("tipo");
            tipo.appendChild(d.createTextNode("recupera_codice"));
            root.appendChild(tipo);
            nomeutente=d.createElement("username");
            nomeutente.appendChild(d.createTextNode(username));
            root.appendChild(nomeutente);
            source = new DOMSource(d);
            result =  new StreamResult(output);
            transformer.transform(source,result);
            output.println();
            output.flush();
            codutente=input.read();   
            for(int x=0;x<nl.getLength();x++){
                codchat=Integer.parseInt(nl.item(x).getLastChild().getTextContent());
                //se l'elemento "tipochat" ha come valore 0 rappresenta una chat privata, altrimenti è una chat di gruppo
                if(nl.item(x).getChildNodes().item(6).getTextContent().equals("0")){
                    //visualizza una chat privata
                    s=nl.item(x).getChildNodes().item(1).getTextContent();
                    s2=nl.item(x).getChildNodes().item(3).getTextContent();
                    //b.setBytes(1,nl.item(x).getChildNodes().item(1).getTextContent().getBytes("UTF-8"));
                    ic=new InfoChat(s,s2,codchat);
                    elenco_chat.add(ic);
                }
                else if(nl.item(x).getLastChild().getTextContent().equals("1")){
                    //visualizza una chat pubblica
                    ic=new InfoChat(nl.item(x).getChildNodes().item(4).getTextContent(),codchat);
                    elenco_chat.add(ic);
                }                
                ic.addMouseListener(new ml(pan_chat_corrente,codchat,codutente,sock));
            }
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(ElencoChat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ElencoChat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ElencoChat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(ElencoChat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(ElencoChat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(ElencoChat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            
            elenco_chat.setLayout(new BoxLayout(elenco_chat, BoxLayout.Y_AXIS));
            pan_chat_corrente.setLayout(new BoxLayout(pan_chat_corrente, BoxLayout.Y_AXIS));
            FileReader fr;
            File f;
            
            f = new File(System.getProperty("user.home")+"/info.txt");
            fr=new FileReader(f);
            Scanner sc=new Scanner(fr);
            
            username=sc.nextLine();
            nome.setText(username);
            sc.close();
            elencaChat();
            
        } catch (FileNotFoundException ex) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowOpened

    private void immnuovachatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_immnuovachatMouseClicked
        try {
            nuovachat = new NuovaChat(this,true,codutente,sock);
            nuovachat.setVisible(true);
            nuovachat.requestFocus();
            nuovachat.addWindowListener(new wl(this));
        } catch (IOException ex) {
            Logger.getLogger(ElencoChat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_immnuovachatMouseClicked
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bio;
    private javax.swing.JPanel elenco_chat;
    private javax.swing.JLabel immnuovachat;
    private javax.swing.JLabel immprofilo;
    private javax.swing.JLabel nome;
    private javax.swing.JPanel pan_chat_corrente;
    private javax.swing.JPanel profilo;
    // End of variables declaration//GEN-END:variables

    private static class wl implements WindowListener {
        ElencoChat ec;
        
        public wl(ElencoChat ec) {
            this.ec=ec;
        }

        @Override
        public void windowOpened(WindowEvent e) {
           
        }

        @Override
        public void windowClosing(WindowEvent e) {
        }

        @Override
        public void windowClosed(WindowEvent e) {
            ec.elenco_chat.removeAll();
            ec.elencaChat();
            ec.elenco_chat.repaint();
            ec.elenco_chat.updateUI();
        }

        @Override
        public void windowIconified(WindowEvent e) {
        }

        @Override
        public void windowDeiconified(WindowEvent e) {
        }

        @Override
        public void windowActivated(WindowEvent e) {
        }

        @Override
        public void windowDeactivated(WindowEvent e) {
        }
    }
}
class ml implements MouseListener{
    private JPanel pan_chat_corrente;
    int codchat,codutente;
    Socket sock;
    
    ml(JPanel p,int codchat,int codutentemittente,Socket sock){
        pan_chat_corrente=p;
        this.codchat=codchat;
        this.codutente=codutentemittente;
        this.sock=sock;

    };
    
    @Override
      public void mouseClicked(MouseEvent e) {
        try {
            pan_chat_corrente.removeAll();
            pan_chat_corrente.add(new ChatCorrente(codchat,codutente,sock,pan_chat_corrente));
            pan_chat_corrente.repaint();
            pan_chat_corrente.updateUI();
        } catch (IOException ex) {
            Logger.getLogger(ml.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(ml.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(ml.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(ml.class.getName()).log(Level.SEVERE, null, ex);
        }
      }

    @Override
      public void mousePressed(MouseEvent e) {
      }

    @Override
      public void mouseReleased(MouseEvent e) {
      }

    @Override
      public void mouseEntered(MouseEvent e) {
      }

    @Override
      public void mouseExited(MouseEvent e) {
      }
   }